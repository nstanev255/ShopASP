@using ShopASP.Utils
@model ShopASP.Models.PaginationModel;



<nav aria-label="Pagination">
    <ul class="pagination">
        @{
            var pageLimits = PaginationUtils.GetPaginationLimits(@Model.CurrentPage, @Model.AllPages);

            var previousPage = @Model.CurrentPage - 1;
            var previousPageDisabled = "";
            if (previousPage <= 0)
            {
                previousPageDisabled = "disabled";
            }

            var nextPage = @Model.CurrentPage + 1;
            var nextPageDisabled = "";
            if (nextPage > @Model.AllPages)
            {
                nextPageDisabled = "disabled";
            }

            object previousValues = new { page = previousPage };
            object nextValues = new { page = nextPage };
            if (@Model.AdditionalParams != null)
            {
                previousValues = TypeMerger.TypeMerger.Merge(previousValues, @Model.AdditionalParams);
                nextValues = TypeMerger.TypeMerger.Merge(nextValues, @Model.AdditionalParams);
            }
        }


        <li class="page-item @previousPageDisabled">
            <a class="page-link" href="@Url.Action(@Model.Action, @Model.Controller, previousValues)">Previous</a>
        </li>

        @for (int start = pageLimits[0]; start <= pageLimits[1]; start++)
        {
            var active = start == @Model.CurrentPage ? "active" : "";
            object pageValues = new { page = start };
            if (@Model.AdditionalParams != null)
            {
                pageValues = TypeMerger.TypeMerger.Merge(pageValues, @Model.AdditionalParams);
            }

            <li class="page-item @active">
                <a class="page-link" href="@Url.Action(@Model.Action, @Model.Controller, pageValues)">@start</a>
            </li>
        }

        <li class="page-item @nextPageDisabled">
            <a class="page-link" href="@Url.Action(@Model.Action, @Model.Controller, nextValues)">Next</a>
        </li>
    </ul>
</nav>