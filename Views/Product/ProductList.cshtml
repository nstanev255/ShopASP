@using ShopASP.Constants
@using ShopASP.Utils
@model ShopASP.Models.ProductListViewModel

<div class="container">
    <div class="text-center">
        <h1> @Constants.Messages["Product_Listing_" + @ViewContext.RouteData.Values["category"]?.ToString()?.ToUpper() + "_Title"] @Constants.Messages["Games"] </h1>
        <p> @Constants.Messages["Product_Listing_" + @ViewContext.RouteData.Values["category"]?.ToString()?.ToUpper() + "_Description"] </p>
    </div>
    <hr/>

    @if (@Model.Products.Count > 0)
    {
        <div class="row">
            @foreach (var item in @Model.Products)
            {
                <div class="col mb-3">
                    <div class="card" style="width: 18rem">
                        <img src="https://@item.FrontCover?.Url" class="card-img-top" alt="..."/>
                        <div class="card-body">
                            <h5 class="card-title"> @item.Name </h5>
                            <p class="card-text text-truncate">@item.Description</p>
                        </div>
                        <div class="card-footer bg-white">
                            <h3>@item.Price</h3>
                            <div>
                                <a href="#" class="btn btn-primary">Add to cart</a>
                                <a href="/product/@item.Id" class="btn btn-primary">See More</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        
        
        
        <nav aria-label="Navigation">
            <ul class="pagination">
                @{
                    var pageLimits = PaginationUtils.GetPaginationLimits(@Model.CurrentPage, @Model.AllPages);

                    var previousPage = @Model.CurrentPage - 1;
                    var previousPageDisabled = "";
                    if (previousPage <= 0)
                    {
                        previousPageDisabled = "disabled";
                    }

                    var nextPage = @Model.CurrentPage + 1;
                    var nextPageDisabled = "";
                    if (nextPage >= @Model.AllPages)
                    {
                        nextPageDisabled = "disabled";
                    }
                }
                
                <li class="page-item @previousPageDisabled">
                    <a class="page-link" href="/@ViewData["category"]?page=@previousPage">Previous</a>
                </li>
                
                @for (int start = @pageLimits[0]; start < @pageLimits[1]; start++)
                {
                    var active = start == @Model.CurrentPage ? "active" : "";
                    <li class="page-item @active"><a class="page-link @active" href="/@ViewData["category"]?page=@start">@start</a></li>
                }
                
                <li class="page-item @nextPageDisabled">
                    <a class="page-link" href="/@ViewData["category"]?page=@nextPage">Next</a>
                </li>
            </ul>
        </nav>
    }
    else
    {
        <h1 class="text-center">@Constants.Messages["Resource_Not_Found"]</h1>
    }

</div>